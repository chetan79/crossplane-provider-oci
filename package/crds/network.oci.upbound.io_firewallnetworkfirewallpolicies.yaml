---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: firewallnetworkfirewallpolicies.network.oci.upbound.io
spec:
  group: network.oci.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - oci
    kind: FirewallNetworkFirewallPolicy
    listKind: FirewallNetworkFirewallPolicyList
    plural: firewallnetworkfirewallpolicies
    singular: firewallnetworkfirewallpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FirewallNetworkFirewallPolicy is the Schema for the FirewallNetworkFirewallPolicys
          API. Provides the Network Firewall Policy resource in Oracle Cloud Infrastructure
          Network Firewall service
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FirewallNetworkFirewallPolicySpec defines the desired state
              of FirewallNetworkFirewallPolicy
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  applicationLists:
                    description: (Updatable) Lists of the application of the policy.
                      The value of an entry is a list of "applications", each consisting
                      of a protocol identifier (such as TCP, UDP, or ICMP) and protocol-specific
                      parameters (such as a port range). The associated key is the
                      identifier by which the application list is referenced.
                    items:
                      properties:
                        applicationListName:
                          description: (Updatable) The key is the identifier by which
                            the application list is referenced.
                          type: string
                        applicationValues:
                          description: (Updatable) Details about the application
                          items:
                            properties:
                              icmpCode:
                                description: (Updatable) Used when you select ICMP.
                                  0-Net unreachable, 1-Host unreachable, 2-Protocol
                                  unreachable, 3-Port unreachable
                                type: number
                              icmpType:
                                description: (Updatable)  Used when you select ICMP.
                                  0-Echo reply, 3-Destination unreachable, 5-Redirect,
                                  8-Echo
                                type: number
                              maximumPort:
                                description: (Updatable) Used when you select TCP
                                  or UDP. Enter a port number.
                                type: number
                              minimumPort:
                                description: (Updatable) Used when you select TCP
                                  or UDP. Enter a port number.
                                type: number
                              type:
                                description: (Updatable) Type of the application based
                                  on the policy.
                                type: string
                            required:
                            - type
                            type: object
                          type: array
                      required:
                      - applicationListName
                      type: object
                    type: array
                  compartmentId:
                    description: (Updatable) The OCID of the compartment containing
                      the NetworkFirewall Policy.
                    type: string
                  compartmentIdRef:
                    description: Reference to a Compartment in identity to populate
                      compartmentId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  compartmentIdSelector:
                    description: Selector for a Compartment in identity to populate
                      compartmentId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  decryptionProfiles:
                    description: (Updatable) Map defining decryption profiles of the
                      policy. The value of an entry is a decryption profile. The associated
                      key is the identifier by which the decryption profile is referenced.
                    items:
                      properties:
                        areCertificateExtensionsRestricted:
                          description: (Updatable) Whether to block sessions if the
                            server's certificate uses extensions other than key usage
                            and/or extended key usage.
                          type: boolean
                        isAutoIncludeAltName:
                          description: (Updatable) Whether to automatically append
                            SAN to impersonating certificate if server certificate
                            is missing SAN.
                          type: boolean
                        isExpiredCertificateBlocked:
                          description: (Updatable) Whether to block sessions if server's
                            certificate is expired.
                          type: boolean
                        isOutOfCapacityBlocked:
                          description: (Updatable) Whether to block sessions if the
                            firewall is temporarily unable to decrypt their traffic.
                          type: boolean
                        isRevocationStatusTimeoutBlocked:
                          description: (Updatable) Whether to block sessions if the
                            revocation status check for server's certificate does
                            not succeed within the maximum allowed time (defaulting
                            to 5 seconds).
                          type: boolean
                        isUnknownRevocationStatusBlocked:
                          description: (Updatable) Whether to block sessions if the
                            revocation status check for server's certificate results
                            in "unknown".
                          type: boolean
                        isUnsupportedCipherBlocked:
                          description: (Updatable) Whether to block sessions if SSL
                            cipher suite is not supported.
                          type: boolean
                        isUnsupportedVersionBlocked:
                          description: (Updatable) Whether to block sessions if SSL
                            version is not supported.
                          type: boolean
                        isUntrustedIssuerBlocked:
                          description: (Updatable) Whether to block sessions if server's
                            certificate is issued by an untrusted certificate authority
                            (CA).
                          type: boolean
                        key:
                          description: Source of the secrets, where the secrets are
                            stored.
                          type: string
                        type:
                          description: (Updatable) Type of the application based on
                            the policy.
                          type: string
                      required:
                      - key
                      - type
                      type: object
                    type: array
                  decryptionRules:
                    description: (Updatable) List of Decryption Rules defining the
                      behavior of the policy. The first rule with a matching condition
                      determines the action taken upon network traffic.
                    items:
                      properties:
                        action:
                          description: '(Updatable) Action:'
                          type: string
                        condition:
                          description: (Updatable) Match criteria used in Decryption
                            Rule used on the firewall policy rules.
                          items:
                            properties:
                              destinations:
                                description: (Updatable) An array of IP address list
                                  names to be evaluated against the traffic destination
                                  address.
                                items:
                                  type: string
                                type: array
                              sources:
                                description: (Updatable) An array of IP address list
                                  names to be evaluated against the traffic source
                                  address.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        decryptionProfile:
                          description: (Updatable) The name of the decryption profile
                            to use.
                          type: string
                        name:
                          description: (Updatable) Name for the decryption rule, must
                            be unique within the policy.
                          type: string
                        secret:
                          description: according to the specified decryptionProfile.
                          type: string
                      required:
                      - action
                      - condition
                      - name
                      type: object
                    type: array
                  definedTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Defined tags for this resource. Each
                      key is predefined and scoped to a namespace. Example: {"foo-namespace.bar-key":
                      "value"}'
                    type: object
                  displayName:
                    description: (Updatable) A user-friendly optional name for the
                      firewall policy. Avoid entering confidential information.
                    type: string
                  freeformTags:
                    additionalProperties:
                      type: string
                    description: '(Updatable) Simple key-value pair that is applied
                      without any predefined name, type or scope. Exists for cross-compatibility
                      only. Example: {"bar-key": "value"}'
                    type: object
                  ipAddressLists:
                    description: (Updatable) List of IP address lists of the policy.
                      The value of an entry is a list of IP addresses or prefixes
                      in CIDR notation. The associated key is the identifier by which
                      the IP address list is referenced.
                    items:
                      properties:
                        ipAddressListName:
                          description: (Updatable) The identifier by which the IP
                            address list is referenced.
                          type: string
                        ipAddressListValue:
                          description: (Updatable) List of IP address lists of the
                            policy.
                          items:
                            type: string
                          type: array
                      required:
                      - ipAddressListName
                      type: object
                    type: array
                  mappedSecrets:
                    description: (Updatable) Map defining secrets of the policy. The
                      value of an entry is a "mapped secret" consisting of a purpose
                      and source. The associated key is the identifier by which the
                      mapped secret is referenced.
                    items:
                      properties:
                        key:
                          description: Source of the secrets, where the secrets are
                            stored.
                          type: string
                        type:
                          description: (Updatable) Type of the application based on
                            the policy.
                          type: string
                        vaultSecretId:
                          description: (Updatable) OCID for the Vault Secret to be
                            used.
                          type: string
                        versionNumber:
                          description: (Updatable) Version number of the secret to
                            be used.
                          type: number
                      required:
                      - key
                      - type
                      type: object
                    type: array
                  securityRules:
                    description: (Updatable) List of Security Rules defining the behavior
                      of the policy. The first rule with a matching condition determines
                      the action taken upon network traffic.
                    items:
                      properties:
                        action:
                          description: '(Updatable) Action:'
                          type: string
                        condition:
                          description: (Updatable) Match criteria used in Decryption
                            Rule used on the firewall policy rules.
                          items:
                            properties:
                              applications:
                                description: (Updatable) An array of application list
                                  names to be evaluated against the traffic protocol
                                  and protocol-specific parameters.
                                items:
                                  type: string
                                type: array
                              destinations:
                                description: (Updatable) An array of IP address list
                                  names to be evaluated against the traffic destination
                                  address.
                                items:
                                  type: string
                                type: array
                              sources:
                                description: (Updatable) An array of IP address list
                                  names to be evaluated against the traffic source
                                  address.
                                items:
                                  type: string
                                type: array
                              urls:
                                description: (Updatable) An array of URL pattern list
                                  names to be evaluated against the HTTP(S) request
                                  target.
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        inspection:
                          description: ', which may result in rejection.'
                          type: string
                        name:
                          description: (Updatable) Name for the decryption rule, must
                            be unique within the policy.
                          type: string
                      required:
                      - action
                      - condition
                      - name
                      type: object
                    type: array
                  urlLists:
                    description: (Updatable) Map defining URL pattern lists of the
                      policy. The value of an entry is a list of URL patterns. The
                      associated key is the identifier by which the URL pattern list
                      is referenced.
                    items:
                      properties:
                        urlListName:
                          description: (Updatable) The identifier for the url list
                          type: string
                        urlListValues:
                          description: (Updatable) The list of Url Patterns.
                          items:
                            properties:
                              pattern:
                                description: (Updatable) URL lists to allow or deny
                                  traffic to a group of URLs. You can include a maximum
                                  of 25 URLs in each list.
                                type: string
                              type:
                                description: (Updatable) Type of the application based
                                  on the policy.
                                type: string
                            required:
                            - type
                            type: object
                          type: array
                      required:
                      - urlListName
                      type: object
                    type: array
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: FirewallNetworkFirewallPolicyStatus defines the observed
              state of FirewallNetworkFirewallPolicy.
            properties:
              atProvider:
                properties:
                  id:
                    description: The OCID of the resource - Network Firewall Policy.
                    type: string
                  isFirewallAttached:
                    description: To determine if any Network Firewall is associated
                      with this Network Firewall Policy.
                    type: boolean
                  lifecycleDetails:
                    description: A message describing the current state in more detail.
                      For example, can be used to provide actionable information for
                      a resource in Failed state.
                    type: string
                  state:
                    description: The current state of the Network Firewall Policy.
                    type: string
                  systemTags:
                    additionalProperties:
                      type: string
                    description: 'Usage of system tag keys. These predefined keys
                      are scoped to namespaces. Example: {"orcl-cloud.free-tier-retained":
                      "true"}'
                    type: object
                  timeCreated:
                    description: 'The time instant at which the Network Firewall Policy
                      was created in the format defined by RFC3339. Example: 2016-08-25T21:10:29.600Z'
                    type: string
                  timeUpdated:
                    description: 'The time instant at which the Network Firewall Policy
                      was updated in the format defined by RFC3339. Example: 2016-08-25T21:10:29.600Z'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
