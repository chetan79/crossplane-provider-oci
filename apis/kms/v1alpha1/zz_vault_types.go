/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VaultObservation struct {

	// The service endpoint to perform cryptographic operations against. Cryptographic operations include Encrypt, Decrypt, and GenerateDataEncryptionKey operations.
	CryptoEndpoint *string `json:"cryptoEndpoint,omitempty" tf:"crypto_endpoint,omitempty"`

	// The OCID of the vault.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A boolean that will be true when vault is primary, and will be false when vault is a replica from a primary vault.
	IsPrimary *bool `json:"isPrimary,omitempty" tf:"is_primary,omitempty"`

	// The service endpoint to perform management operations against. Management operations include "Create," "Update," "List," "Get," and "Delete" operations.
	ManagementEndpoint *string `json:"managementEndpoint,omitempty" tf:"management_endpoint,omitempty"`

	// Vault replica details
	ReplicaDetails []VaultReplicaDetailsObservation `json:"replicaDetails,omitempty" tf:"replica_details,omitempty"`

	// The OCID of the vault from which this vault was restored, if it was restored from a backup file.  If you restore a vault to the same region, the vault retains the same OCID that it had when you  backed up the vault.
	RestoredFromVaultID *string `json:"restoredFromVaultId,omitempty" tf:"restored_from_vault_id,omitempty"`

	// The vault's current lifecycle state.  Example: DELETED
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The date and time this vault was created, expressed in RFC 3339 timestamp format.  Example: 2018-04-03T21:10:29.600Z
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`
}

type VaultParameters struct {

	// (Updatable) The OCID of the compartment where you want to create this vault.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/identity/v1alpha1.Compartment
	// +kubebuilder:validation:Optional
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// Reference to a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDRef *v1.Reference `json:"compartmentIdRef,omitempty" tf:"-"`

	// Selector for a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDSelector *v1.Selector `json:"compartmentIdSelector,omitempty" tf:"-"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: {"Operations.CostCenter": "42"}
	// +kubebuilder:validation:Optional
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name for the vault. It does not have to be unique, and it is changeable. Avoid entering confidential information.
	// +kubebuilder:validation:Required
	DisplayName *string `json:"displayName" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags. Example: {"Department": "Finance"}
	// +kubebuilder:validation:Optional
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) Details where vault was backed up.
	// +kubebuilder:validation:Optional
	RestoreFromFile []VaultRestoreFromFileParameters `json:"restoreFromFile,omitempty" tf:"restore_from_file,omitempty"`

	// (Updatable) Details where vault was backed up
	// +kubebuilder:validation:Optional
	RestoreFromObjectStore []VaultRestoreFromObjectStoreParameters `json:"restoreFromObjectStore,omitempty" tf:"restore_from_object_store,omitempty"`

	// +kubebuilder:validation:Optional
	RestoreTrigger *bool `json:"restoreTrigger,omitempty" tf:"restore_trigger,omitempty"`

	// (Updatable) An optional property for the deletion time of the vault, expressed in RFC 3339 timestamp format. Example: 2019-04-03T21:10:29.600Z
	// +kubebuilder:validation:Optional
	TimeOfDeletion *string `json:"timeOfDeletion,omitempty" tf:"time_of_deletion,omitempty"`

	// The type of vault to create. Each type of vault stores the key with different degrees of isolation and has different options and pricing.
	// +kubebuilder:validation:Required
	VaultType *string `json:"vaultType" tf:"vault_type,omitempty"`
}

type VaultReplicaDetailsObservation struct {

	// ReplicationId associated with a vault operation
	ReplicationID *string `json:"replicationId,omitempty" tf:"replication_id,omitempty"`
}

type VaultReplicaDetailsParameters struct {
}

type VaultRestoreFromFileObservation struct {
}

type VaultRestoreFromFileParameters struct {

	// content length of vault's backup binary file
	// +kubebuilder:validation:Required
	ContentLength *string `json:"contentLength" tf:"content_length,omitempty"`

	// (Updatable) content md5 hashed value of vault's backup file
	// +kubebuilder:validation:Optional
	ContentMd5 *string `json:"contentMd5,omitempty" tf:"content_md5,omitempty"`

	// Vault backup file content
	// +kubebuilder:validation:Required
	RestoreVaultFromFileDetails *string `json:"restoreVaultFromFileDetails" tf:"restore_vault_from_file_details,omitempty"`
}

type VaultRestoreFromObjectStoreObservation struct {
}

type VaultRestoreFromObjectStoreParameters struct {

	// (Updatable) Name of the bucket where vault was backed up
	// +kubebuilder:validation:Optional
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// (Updatable) Type of backup to restore from. Values of "BUCKET", "PRE_AUTHENTICATED_REQUEST_URI" are supported
	// +kubebuilder:validation:Required
	Destination *string `json:"destination" tf:"destination,omitempty"`

	// (Updatable) Namespace of the bucket where vault was backed up
	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// (Updatable) Object containing the backup
	// +kubebuilder:validation:Optional
	Object *string `json:"object,omitempty" tf:"object,omitempty"`

	// (Updatable) Pre-authenticated-request-uri of the backup* restore_trigger -  (Updatable) An optional property when flipped triggers restore from restore option provided in config file.
	// +kubebuilder:validation:Optional
	URI *string `json:"uri,omitempty" tf:"uri,omitempty"`
}

// VaultSpec defines the desired state of Vault
type VaultSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VaultParameters `json:"forProvider"`
}

// VaultStatus defines the observed state of Vault.
type VaultStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VaultObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Vault is the Schema for the Vaults API. Provides the Vault resource in Oracle Cloud Infrastructure Kms service
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type Vault struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VaultSpec   `json:"spec"`
	Status            VaultStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VaultList contains a list of Vaults
type VaultList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Vault `json:"items"`
}

// Repository type metadata.
var (
	Vault_Kind             = "Vault"
	Vault_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Vault_Kind}.String()
	Vault_KindAPIVersion   = Vault_Kind + "." + CRDGroupVersion.String()
	Vault_GroupVersionKind = CRDGroupVersion.WithKind(Vault_Kind)
)

func init() {
	SchemeBuilder.Register(&Vault{}, &VaultList{})
}
