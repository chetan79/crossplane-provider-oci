/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SchedulesObservation struct {
}

type SchedulesParameters struct {

	// (Updatable) The type of volume backup to create.
	// +kubebuilder:validation:Required
	BackupType *string `json:"backupType" tf:"backup_type,omitempty"`

	// (Updatable) The day of the month to schedule the volume backup.
	// +kubebuilder:validation:Optional
	DayOfMonth *float64 `json:"dayOfMonth,omitempty" tf:"day_of_month,omitempty"`

	// (Updatable) The day of the week to schedule the volume backup.
	// +kubebuilder:validation:Optional
	DayOfWeek *string `json:"dayOfWeek,omitempty" tf:"day_of_week,omitempty"`

	// (Updatable) The hour of the day to schedule the volume backup.
	// +kubebuilder:validation:Optional
	HourOfDay *float64 `json:"hourOfDay,omitempty" tf:"hour_of_day,omitempty"`

	// (Updatable) The month of the year to schedule the volume backup.
	// +kubebuilder:validation:Optional
	Month *string `json:"month,omitempty" tf:"month,omitempty"`

	// (Updatable) The number of seconds that the volume backup start time should be shifted from the default interval boundaries specified by the period. The volume backup start time is the frequency start time plus the offset.
	// +kubebuilder:validation:Optional
	OffsetSeconds *float64 `json:"offsetSeconds,omitempty" tf:"offset_seconds,omitempty"`

	// (Updatable) Indicates how the offset is defined. If value is STRUCTURED, then hourOfDay, dayOfWeek, dayOfMonth, and month fields are used and offsetSeconds will be ignored in requests and users should ignore its value from the responses.
	// +kubebuilder:validation:Optional
	OffsetType *string `json:"offsetType,omitempty" tf:"offset_type,omitempty"`

	// (Updatable) The volume backup frequency.
	// +kubebuilder:validation:Required
	Period *string `json:"period" tf:"period,omitempty"`

	// (Updatable) How long, in seconds, to keep the volume backups created by this schedule.
	// +kubebuilder:validation:Required
	RetentionSeconds *float64 `json:"retentionSeconds" tf:"retention_seconds,omitempty"`

	// (Updatable) Specifies what time zone is the schedule in
	// enum:
	// +kubebuilder:validation:Optional
	TimeZone *string `json:"timeZone,omitempty" tf:"time_zone,omitempty"`
}

type VolumeBackupPolicyObservation struct {

	// The OCID of the volume backup policy.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The date and time the volume backup policy was created. Format defined by RFC3339.
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`
}

type VolumeBackupPolicyParameters struct {

	// The OCID of the compartment.
	// +crossplane:generate:reference:type=github.com/oracle/provider-oci/apis/identity/v1alpha1.Compartment
	// +kubebuilder:validation:Optional
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// Reference to a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDRef *v1.Reference `json:"compartmentIdRef,omitempty" tf:"-"`

	// Selector for a Compartment in identity to populate compartmentId.
	// +kubebuilder:validation:Optional
	CompartmentIDSelector *v1.Selector `json:"compartmentIdSelector,omitempty" tf:"-"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.  Example: {"Operations.CostCenter": "42"}
	// +kubebuilder:validation:Optional
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) The paired destination region for copying scheduled backups to. Example: us-ashburn-1. See Region Pairs for details about paired regions.
	// +kubebuilder:validation:Optional
	DestinationRegion *string `json:"destinationRegion,omitempty" tf:"destination_region,omitempty"`

	// (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +kubebuilder:validation:Optional
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) The collection of schedules for the volume backup policy. See see Schedules in Policy-Based Backups for more information.
	// +kubebuilder:validation:Optional
	Schedules []SchedulesParameters `json:"schedules,omitempty" tf:"schedules,omitempty"`
}

// VolumeBackupPolicySpec defines the desired state of VolumeBackupPolicy
type VolumeBackupPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VolumeBackupPolicyParameters `json:"forProvider"`
}

// VolumeBackupPolicyStatus defines the observed state of VolumeBackupPolicy.
type VolumeBackupPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VolumeBackupPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// VolumeBackupPolicy is the Schema for the VolumeBackupPolicys API. Provides the Volume Backup Policy resource in Oracle Cloud Infrastructure Core service
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type VolumeBackupPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VolumeBackupPolicySpec   `json:"spec"`
	Status            VolumeBackupPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VolumeBackupPolicyList contains a list of VolumeBackupPolicys
type VolumeBackupPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VolumeBackupPolicy `json:"items"`
}

// Repository type metadata.
var (
	VolumeBackupPolicy_Kind             = "VolumeBackupPolicy"
	VolumeBackupPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VolumeBackupPolicy_Kind}.String()
	VolumeBackupPolicy_KindAPIVersion   = VolumeBackupPolicy_Kind + "." + CRDGroupVersion.String()
	VolumeBackupPolicy_GroupVersionKind = CRDGroupVersion.WithKind(VolumeBackupPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&VolumeBackupPolicy{}, &VolumeBackupPolicyList{})
}
