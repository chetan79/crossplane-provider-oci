/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TsigKeyObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Self *string `json:"self,omitempty" tf:"self,omitempty"`

	State *string `json:"state,omitempty" tf:"state,omitempty"`

	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`

	TimeUpdated *string `json:"timeUpdated,omitempty" tf:"time_updated,omitempty"`
}

type TsigKeyParameters struct {

	// +kubebuilder:validation:Required
	Algorithm *string `json:"algorithm" tf:"algorithm,omitempty"`

	// +crossplane:generate:reference:type=github.com/crossplane-contrib/provider-jet-oci/apis/identity/v1alpha1.Compartment
	// +kubebuilder:validation:Optional
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// +kubebuilder:validation:Optional
	CompartmentIDRef *v1.Reference `json:"compartmentIdRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	CompartmentIDSelector *v1.Selector `json:"compartmentIdSelector,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// +kubebuilder:validation:Optional
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	SecretSecretRef v1.SecretKeySelector `json:"secretSecretRef" tf:"-"`
}

// TsigKeySpec defines the desired state of TsigKey
type TsigKeySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TsigKeyParameters `json:"forProvider"`
}

// TsigKeyStatus defines the observed state of TsigKey.
type TsigKeyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TsigKeyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// TsigKey is the Schema for the TsigKeys API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,ocijet}
type TsigKey struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TsigKeySpec   `json:"spec"`
	Status            TsigKeyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TsigKeyList contains a list of TsigKeys
type TsigKeyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TsigKey `json:"items"`
}

// Repository type metadata.
var (
	TsigKey_Kind             = "TsigKey"
	TsigKey_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TsigKey_Kind}.String()
	TsigKey_KindAPIVersion   = TsigKey_Kind + "." + CRDGroupVersion.String()
	TsigKey_GroupVersionKind = CRDGroupVersion.WithKind(TsigKey_Kind)
)

func init() {
	SchemeBuilder.Register(&TsigKey{}, &TsigKeyList{})
}
