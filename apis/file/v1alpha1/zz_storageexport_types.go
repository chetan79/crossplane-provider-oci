/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ExportOptionsObservation struct {
}

type ExportOptionsParameters struct {

	// (Updatable) Type of access to grant clients using the file system through this export. If unspecified defaults to READ_ONLY.
	// +kubebuilder:validation:Optional
	Access *string `json:"access,omitempty" tf:"access,omitempty"`

	// +kubebuilder:validation:Optional
	AllowedAuth []*string `json:"allowedAuth,omitempty" tf:"allowed_auth,omitempty"`

	// (Updatable) GID value to remap to when squashing a client GID (see identitySquash for more details.) If unspecified defaults to 65534.
	// +kubebuilder:validation:Optional
	AnonymousGID *string `json:"anonymousGid,omitempty" tf:"anonymous_gid,omitempty"`

	// (Updatable) UID value to remap to when squashing a client UID (see identitySquash for more details.) If unspecified, defaults to 65534.
	// +kubebuilder:validation:Optional
	AnonymousUID *string `json:"anonymousUid,omitempty" tf:"anonymous_uid,omitempty"`

	// (Updatable) Used when clients accessing the file system through this export have their UID and GID remapped to 'anonymousUid' and 'anonymousGid'. If ALL, all users and groups are remapped; if ROOT, only the root user and group (UID/GID 0) are remapped; if NONE, no remapping is done. If unspecified, defaults to ROOT.
	// +kubebuilder:validation:Optional
	IdentitySquash *string `json:"identitySquash,omitempty" tf:"identity_squash,omitempty"`

	// +kubebuilder:validation:Optional
	IsAnonymousAccessAllowed *bool `json:"isAnonymousAccessAllowed,omitempty" tf:"is_anonymous_access_allowed,omitempty"`

	// (Updatable) If true, clients accessing the file system through this export must connect from a privileged source port. If unspecified, defaults to true.
	// +kubebuilder:validation:Optional
	RequirePrivilegedSourcePort *bool `json:"requirePrivilegedSourcePort,omitempty" tf:"require_privileged_source_port,omitempty"`

	// (Updatable) Clients these options should apply to. Must be a either single IPv4 address or single IPv4 CIDR block.
	// +kubebuilder:validation:Required
	Source *string `json:"source" tf:"source,omitempty"`
}

type LocksObservation struct {
}

type LocksParameters struct {

	// +kubebuilder:validation:Optional
	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	// The OCID of this export.
	// +kubebuilder:validation:Optional
	RelatedResourceID *string `json:"relatedResourceId,omitempty" tf:"related_resource_id,omitempty"`

	// The date and time the export was created, expressed in RFC 3339 timestamp format.  Example: 2016-08-25T21:10:29.600Z
	// +kubebuilder:validation:Optional
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`

	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type StorageExportObservation struct {

	// The OCID of this export.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The current state of this export.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The date and time the export was created, expressed in RFC 3339 timestamp format.  Example: 2016-08-25T21:10:29.600Z
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`
}

type StorageExportParameters struct {

	// (Updatable) Export options for the new export. If left unspecified, defaults to:
	// +kubebuilder:validation:Optional
	ExportOptions []ExportOptionsParameters `json:"exportOptions,omitempty" tf:"export_options,omitempty"`

	// The OCID of this export's export set.
	// +crossplane:generate:reference:type=StorageExportSet
	// +kubebuilder:validation:Optional
	ExportSetID *string `json:"exportSetId,omitempty" tf:"export_set_id,omitempty"`

	// Reference to a StorageExportSet to populate exportSetId.
	// +kubebuilder:validation:Optional
	ExportSetIDRef *v1.Reference `json:"exportSetIdRef,omitempty" tf:"-"`

	// Selector for a StorageExportSet to populate exportSetId.
	// +kubebuilder:validation:Optional
	ExportSetIDSelector *v1.Selector `json:"exportSetIdSelector,omitempty" tf:"-"`

	// The OCID of this export's file system.
	// +crossplane:generate:reference:type=StorageFileSystem
	// +kubebuilder:validation:Optional
	FileSystemID *string `json:"fileSystemId,omitempty" tf:"file_system_id,omitempty"`

	// Reference to a StorageFileSystem to populate fileSystemId.
	// +kubebuilder:validation:Optional
	FileSystemIDRef *v1.Reference `json:"fileSystemIdRef,omitempty" tf:"-"`

	// Selector for a StorageFileSystem to populate fileSystemId.
	// +kubebuilder:validation:Optional
	FileSystemIDSelector *v1.Selector `json:"fileSystemIdSelector,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	IsIdmapGroupsForSysAuth *bool `json:"isIdmapGroupsForSysAuth,omitempty" tf:"is_idmap_groups_for_sys_auth,omitempty"`

	// +kubebuilder:validation:Optional
	IsLockOverride *bool `json:"isLockOverride,omitempty" tf:"is_lock_override,omitempty"`

	// +kubebuilder:validation:Optional
	Locks []LocksParameters `json:"locks,omitempty" tf:"locks,omitempty"`

	// Path used to access the associated file system.
	// +kubebuilder:validation:Required
	Path *string `json:"path" tf:"path,omitempty"`
}

// StorageExportSpec defines the desired state of StorageExport
type StorageExportSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     StorageExportParameters `json:"forProvider"`
}

// StorageExportStatus defines the observed state of StorageExport.
type StorageExportStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        StorageExportObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// StorageExport is the Schema for the StorageExports API. Provides the Export resource in Oracle Cloud Infrastructure File Storage service
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,oci}
type StorageExport struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              StorageExportSpec   `json:"spec"`
	Status            StorageExportStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// StorageExportList contains a list of StorageExports
type StorageExportList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []StorageExport `json:"items"`
}

// Repository type metadata.
var (
	StorageExport_Kind             = "StorageExport"
	StorageExport_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: StorageExport_Kind}.String()
	StorageExport_KindAPIVersion   = StorageExport_Kind + "." + CRDGroupVersion.String()
	StorageExport_GroupVersionKind = CRDGroupVersion.WithKind(StorageExport_Kind)
)

func init() {
	SchemeBuilder.Register(&StorageExport{}, &StorageExportList{})
}
