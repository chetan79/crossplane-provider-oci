/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by terrajet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ActionsObservation struct {
}

type ActionsParameters struct {

	// +crossplane:generate:reference:type=BalancerBackendSet
	// +kubebuilder:validation:Optional
	BackendSetName *string `json:"backendSetName,omitempty" tf:"backend_set_name,omitempty"`

	// +kubebuilder:validation:Optional
	BackendSetNameRef *v1.Reference `json:"backendSetNameRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	BackendSetNameSelector *v1.Selector `json:"backendSetNameSelector,omitempty" tf:"-"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

type BalancerLoadBalancerRoutingPolicyObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type BalancerLoadBalancerRoutingPolicyParameters struct {

	// +kubebuilder:validation:Required
	ConditionLanguageVersion *string `json:"conditionLanguageVersion" tf:"condition_language_version,omitempty"`

	// +crossplane:generate:reference:type=BalancerLoadBalancer
	// +kubebuilder:validation:Optional
	LoadBalancerID *string `json:"loadBalancerId,omitempty" tf:"load_balancer_id,omitempty"`

	// +kubebuilder:validation:Optional
	LoadBalancerIDRef *v1.Reference `json:"loadBalancerIdRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	LoadBalancerIDSelector *v1.Selector `json:"loadBalancerIdSelector,omitempty" tf:"-"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Required
	Rules []RulesParameters `json:"rules" tf:"rules,omitempty"`
}

type RulesObservation struct {
}

type RulesParameters struct {

	// +kubebuilder:validation:Required
	Actions []ActionsParameters `json:"actions" tf:"actions,omitempty"`

	// +kubebuilder:validation:Required
	Condition *string `json:"condition" tf:"condition,omitempty"`

	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

// BalancerLoadBalancerRoutingPolicySpec defines the desired state of BalancerLoadBalancerRoutingPolicy
type BalancerLoadBalancerRoutingPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BalancerLoadBalancerRoutingPolicyParameters `json:"forProvider"`
}

// BalancerLoadBalancerRoutingPolicyStatus defines the observed state of BalancerLoadBalancerRoutingPolicy.
type BalancerLoadBalancerRoutingPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BalancerLoadBalancerRoutingPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// BalancerLoadBalancerRoutingPolicy is the Schema for the BalancerLoadBalancerRoutingPolicys API
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,ocijet}
type BalancerLoadBalancerRoutingPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BalancerLoadBalancerRoutingPolicySpec   `json:"spec"`
	Status            BalancerLoadBalancerRoutingPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BalancerLoadBalancerRoutingPolicyList contains a list of BalancerLoadBalancerRoutingPolicys
type BalancerLoadBalancerRoutingPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BalancerLoadBalancerRoutingPolicy `json:"items"`
}

// Repository type metadata.
var (
	BalancerLoadBalancerRoutingPolicy_Kind             = "BalancerLoadBalancerRoutingPolicy"
	BalancerLoadBalancerRoutingPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BalancerLoadBalancerRoutingPolicy_Kind}.String()
	BalancerLoadBalancerRoutingPolicy_KindAPIVersion   = BalancerLoadBalancerRoutingPolicy_Kind + "." + CRDGroupVersion.String()
	BalancerLoadBalancerRoutingPolicy_GroupVersionKind = CRDGroupVersion.WithKind(BalancerLoadBalancerRoutingPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&BalancerLoadBalancerRoutingPolicy{}, &BalancerLoadBalancerRoutingPolicyList{})
}
